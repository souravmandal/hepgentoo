diff -urN Delphes_V_2.0.2/Delphes.cpp Delphes_V_2.0.2-subjets/Delphes.cpp
--- Delphes_V_2.0.2/Delphes.cpp	2012-04-30 16:45:00.000000000 +0900
+++ Delphes_V_2.0.2-subjets/Delphes.cpp	2012-07-24 02:00:15.203614146 +0900
@@ -273,6 +273,7 @@
   ExRootTreeWriter *treeWriter = new ExRootTreeWriter(outputfilename, "Analysis");
   ExRootTreeBranch *branchTauJet = treeWriter->NewBranch("TauJet", TRootTauJet::Class());
   ExRootTreeBranch *branchJet = treeWriter->NewBranch("Jet", TRootJet::Class());
+  ExRootTreeBranch *branchSubjet = treeWriter->NewBranch("Subjet",  TClonesArray::Class());
   ExRootTreeBranch *branchElectron = treeWriter->NewBranch("Electron", TRootElectron::Class());
   ExRootTreeBranch *branchMuon = treeWriter->NewBranch("Muon", TRootMuon::Class());
   ExRootTreeBranch *branchPhoton = treeWriter->NewBranch("Photon", TRootPhoton::Class());
@@ -298,6 +299,7 @@
   
   vector<fastjet::PseudoJet> input_particles;//for FastJet algorithm
   vector<fastjet::PseudoJet> sorted_jets;
+  vector<vector<fastjet::PseudoJet> > sorted_subjets;
   vector<TRootTracks> TrackCentral;  
   vector<PhysicsTower> towers;
   vector<D_Particle> electron;
@@ -708,7 +710,8 @@
 
       
       // 2.2.3 ************* jets, B-tag, tau jets
-      sorted_jets=JETRUN->RunJets(input_particles, TrackCentral,NTrackJet,EHADEEM,list_of_active_towers,NCALO);
+      sorted_jets=JETRUN->RunJets(input_particles, TrackCentral,NTrackJet,EHADEEM,list_of_active_towers,NCALO,sorted_subjets);
+      JETRUN->RunSubjets(treeWriter, branchSubjet, sorted_subjets);
       JETRUN->RunJetBtagging(treeWriter, branchJet,sorted_jets,NFCentralQ,NTrackJet,EHADEEM,NCALO);
       JETRUN->RunTauJets(treeWriter,branchTauJet,sorted_jets,towers, TrackCentral,NTrackJet,EHADEEM,NCALO);
       
diff -urN Delphes_V_2.0.2/interface/JetsUtil.h Delphes_V_2.0.2-subjets/interface/JetsUtil.h
--- Delphes_V_2.0.2/interface/JetsUtil.h	2012-04-30 16:40:27.000000000 +0900
+++ Delphes_V_2.0.2-subjets/interface/JetsUtil.h	2012-07-24 00:36:17.201858166 +0900
@@ -79,12 +79,14 @@
   ~JetsUtil() {delete DET; delete plugins;};
   void init(); // for constructors
 
-  vector<fastjet::PseudoJet> RunJets(const vector<fastjet::PseudoJet>&  input_particles, const vector<TRootTracks> & TrackCentral, vector<int> &NTrackJet, vector<float> &EHADEEM, D_CaloTowerList list_of_active_towers, vector<int> &NCALO);
+  vector<fastjet::PseudoJet> RunJets(const vector<fastjet::PseudoJet>&  input_particles, const vector<TRootTracks> & TrackCentral, vector<int> &NTrackJet, vector<float> &EHADEEM, D_CaloTowerList list_of_active_towers, vector<int> &NCALO, vector<vector<fastjet::PseudoJet> > &sorted_subjets);
 
   vector<fastjet::PseudoJet> RunJetsResol(const vector<fastjet::PseudoJet>&  input_particles);
   
   void RunJetBtagging(ExRootTreeWriter *treeWriter, ExRootTreeBranch *branchJet,const vector<fastjet::PseudoJet> & sorted_jets,const TSimpleArray<TRootC::GenParticle> & NFCentralQ, const vector<int> &NTrackJet, const vector<float> &EHADEEM, const vector<int> &NCALO);
   
+  void RunSubjets(ExRootTreeWriter *treeWriter, ExRootTreeBranch *branchSubjet, const vector<vector<fastjet::PseudoJet> > &sorted_subjets);
+  
   void RunTauJets(ExRootTreeWriter *treeWriter, ExRootTreeBranch *branchTauJet,const vector<fastjet::PseudoJet> & sorted_jets,const vector<PhysicsTower> & towers, const vector<TRootTracks> & TrackCentral, const vector<int> &NTrackJet, const vector<float> &EHADEEM,const vector<int> &NCALO);
 
  private:
@@ -93,6 +95,7 @@
   fastjet::JetDefinition::Plugin * plugins;
   vector<fastjet::PseudoJet> inclusive_jets;
   vector<fastjet::PseudoJet> sorted_jets;
+  vector<vector<fastjet::PseudoJet> > sorted_subjets;
 };
 
 #endif
diff -urN Delphes_V_2.0.2/src/JetsUtil.cc Delphes_V_2.0.2-subjets/src/JetsUtil.cc
--- Delphes_V_2.0.2/src/JetsUtil.cc	2012-04-30 16:40:17.000000000 +0900
+++ Delphes_V_2.0.2-subjets/src/JetsUtil.cc	2012-07-24 01:58:46.317811911 +0900
@@ -32,6 +32,7 @@
 ***********************************************************************/
 
 #include "JetsUtil.h"
+#include "TClonesArray.h"
 
 using namespace std;
 
@@ -121,10 +122,11 @@
   
 }
 
-vector<fastjet::PseudoJet> JetsUtil::RunJets(const vector<fastjet::PseudoJet>&  input_particles,  const vector<TRootTracks> & TrackCentral,  vector<int> &NTrackJet, vector<float> &EHADEEM,D_CaloTowerList list_of_active_towers, vector<int> &NCALO)
+vector<fastjet::PseudoJet> JetsUtil::RunJets(const vector<fastjet::PseudoJet>&  input_particles,  const vector<TRootTracks> & TrackCentral,  vector<int> &NTrackJet, vector<float> &EHADEEM,D_CaloTowerList list_of_active_towers, vector<int> &NCALO, vector<vector<fastjet::PseudoJet> > &sorted_subjets)
 {
   inclusive_jets.clear();
   sorted_jets.clear();
+  sorted_subjets.clear();
   // run the jet clustering with the above jet definition
   if(input_particles.size()!=0)
     {
@@ -135,6 +137,12 @@
       
       // sort jets into increasing pt
       sorted_jets = sorted_by_pt(inclusive_jets);
+      
+      // get subjets
+      double dcut = 0.1;
+      for(unsigned int i = 0; i < sorted_jets.size(); i++)
+         sorted_subjets.push_back(sorted_by_pt(sorted_jets[i].exclusive_subjets(dcut)));
+      
       //Bin tracks to make the link 
       float  iEtaTrack[TrackCentral.size()];
       float  iPhiTrack[TrackCentral.size()];
@@ -219,6 +227,22 @@
   } // for itJet : loop on all jets
 }
 
+void JetsUtil::RunSubjets(ExRootTreeWriter *treeWriter, ExRootTreeBranch *branchSubjet, const vector<vector<fastjet::PseudoJet> > &sorted_subjets)
+{
+  TClonesArray *elementSubjet;
+  TRootParticle *part;
+  
+  for (unsigned int i = 0; i < sorted_subjets.size(); i++) {
+    elementSubjet = (TClonesArray *) branchSubjet->NewEntry();
+    elementSubjet->SetClass(TRootParticle::Class(), sorted_subjets[i].size());
+    for (unsigned int j = 0; j < sorted_subjets[i].size(); j++) {
+      fastjet::PseudoJet tj = sorted_subjets[i][j];
+      part = (TRootParticle *) elementSubjet->AddrAt(j);
+      part->Set(tj.px(), tj.py(), tj.pz(), tj.E());
+    }
+  }
+}
+
 void JetsUtil::RunTauJets(ExRootTreeWriter *treeWriter, ExRootTreeBranch *branchTauJet,const vector<fastjet::PseudoJet> & sorted_jets,const vector<PhysicsTower> & towers, const vector<TRootTracks> & TrackCentral, const vector<int> &NTrackJet, const vector<float> &EHADEEM,const vector<int> &NCALO)
 {
   TRootTauJet *elementTauJet;
